// Generated by CoffeeScript 1.6.3
var synappseApp;

synappseApp = angular.module('synappseApp', ['ngRoute', 'synappseDropbox', 'synappseControllers', 'synappseServices', 'synappseHelpers', 'synappseConflictManager']);

synappseApp.config([
  '$routeProvider', function($routeProvider) {
    $routeProvider.when('/', {
      templateUrl: 'views/home.html'
    }).when('/home', {
      redirectTo: '/'
    }).when('/projects/:params', {
      templateUrl: 'views/tasks.html',
      controller: 'ProjectCtrl'
    }).when('/tasks', {
      templateUrl: 'views/tasks.html',
      controller: 'TaskCtrl'
    }).when('/tasks/new-task', {
      templateUrl: 'views/new-task.html',
      controller: 'TaskCtrl'
    }).otherwise({
      redirectTo: '/'
    });
    return void 0;
  }
]);

console.log('App loaded');

/* --------------------------------------------
     Begin services.coffee
--------------------------------------------
*/


synappseApp = angular.module('synappseServices', ['ngResource']);

synappseApp.factory('Projects', function() {
  var Projects, factory;
  Projects = localStorage['projects'] ? angular.fromJson(localStorage['projects']) : [];
  factory = {};
  factory.cache = function() {
    return localStorage['projects'] = angular.toJson(Projects);
  };
  factory.getProjects = function() {
    return Projects;
  };
  factory.createProject = function(name) {
    var id, project;
    id = generateID(2, (function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = Projects.length; _i < _len; _i++) {
        project = Projects[_i];
        _results.push(project.id);
      }
      return _results;
    })());
    Projects.push({
      name: name,
      id: id,
      folder: DB.folder + (slug(name)) + '/',
      users: [],
      tasks: []
    });
    return factory.cache();
  };
  factory.readProject = function(id) {
    var project;
    return ((function() {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = Projects.length; _i < _len; _i++) {
        project = Projects[_i];
        if (project.id === id) {
          _results.push(project);
        }
      }
      return _results;
    })())[0];
  };
  factory.createTask = function(projectID, taskName) {
    var project, task, _i, _len;
    for (_i = 0, _len = Projects.length; _i < _len; _i++) {
      project = Projects[_i];
      if (project.id === projectID) {
        project.tasks.push({
          name: taskName,
          id: generateID(2, (function() {
            var _j, _len1, _ref, _results;
            _ref = project.tasks;
            _results = [];
            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
              task = _ref[_j];
              _results.push(task.id);
            }
            return _results;
          })())
        });
      }
    }
    return factory.cache();
  };
  factory.deleteTask = function(projectID, taskID) {
    var project, task, _i, _len;
    for (_i = 0, _len = Projects.length; _i < _len; _i++) {
      project = Projects[_i];
      if (project.id === projectID) {
        project.tasks = (function() {
          var _j, _len1, _ref, _results;
          _ref = project.tasks;
          _results = [];
          for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
            task = _ref[_j];
            if (task.id !== taskID) {
              _results.push(task);
            }
          }
          return _results;
        })();
      }
    }
    return factory.cache();
  };
  return factory;
});

console.log('Services loaded');

/* --------------------------------------------
     Begin controllers.coffee
--------------------------------------------
*/


synappseApp = angular.module('synappseControllers', []);

synappseApp.controller('MainCtrl', function($scope, Projects) {
  $scope.projects = Projects.getProjects();
  $scope.auth = false;
  $scope.login = function() {
    $scope.auth = true;
    return $scope.$apply();
  };
  DB.auth($scope.login);
  $scope.syncProjects = function() {
    return DB.syncProjects($scope.projects, function() {
      Projects.cache();
      return $scope.$apply();
    });
  };
  return $scope.createProject = function() {
    Projects.createProject($scope.projectName);
    $scope.projectName = "";
    return $scope.projectFolder = "";
  };
});

synappseApp.controller('ProjectCtrl', function($scope, $routeParams, Projects) {
  $scope.project = Projects.readProject($routeParams.params);
  $scope.syncProject = function() {
    return DB.syncProject($scope.project, function() {
      Projects.cache();
      return $scope.$apply();
    });
  };
  return $scope.createTask = function() {
    Projects.createTask($scope.project.id, $scope.taskName);
    return $scope.taskName = "";
  };
});

synappseApp.controller('TaskCtrl', function($scope, $routeParams, Projects) {
  return $scope.deleteTask = function() {
    return Projects.deleteTask($scope.project.id, $scope.task.id);
  };
});

console.log('Controllers loaded');
